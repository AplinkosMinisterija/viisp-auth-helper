//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.01.15 at 01:18:30 PM EET 
//


package lt.atea.vaiisis.authentication.model.xml;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for userInformation.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="userInformation">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="id"/>
 *     &lt;enumeration value="firstName"/>
 *     &lt;enumeration value="lastName"/>
 *     &lt;enumeration value="address"/>
 *     &lt;enumeration value="email"/>
 *     &lt;enumeration value="phoneNumber"/>
 *     &lt;enumeration value="birthday"/>
 *     &lt;enumeration value="companyName"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "userInformation", namespace = "http://www.epaslaugos.lt/services/authentication")
@XmlEnum
public enum UserInformation {

    @XmlEnumValue("id")
    ID("id"),
    @XmlEnumValue("firstName")
    FIRST_NAME("firstName"),
    @XmlEnumValue("lastName")
    LAST_NAME("lastName"),
    @XmlEnumValue("address")
    ADDRESS("address"),
    @XmlEnumValue("email")
    EMAIL("email"),
    @XmlEnumValue("phoneNumber")
    PHONE_NUMBER("phoneNumber"),
    @XmlEnumValue("birthday")
    BIRTHDAY("birthday"),
    @XmlEnumValue("companyName")
    COMPANY_NAME("companyName");
    private final String value;

    UserInformation(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static UserInformation fromValue(String v) {
        for (UserInformation c: UserInformation.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
